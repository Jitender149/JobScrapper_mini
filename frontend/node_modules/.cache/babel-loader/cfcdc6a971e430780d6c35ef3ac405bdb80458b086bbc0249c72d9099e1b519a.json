{"ast":null,"code":"// \"use client\"\n\n// import { useState } from \"react\"\n// import \"./App.css\"\n// import SearchForm from \"./components/SearchForm\"\n// import JobList from \"./components/JobList\"\n// import Header from \"./components/Header\"\n// import Footer from \"./components/Footer\"\n\n// function App() {\n//   const [jobs, setJobs] = useState([])\n//   const [loading, setLoading] = useState(false)\n//   const [error, setError] = useState(null)\n\n//   const searchJobs = async (searchParams) => {\n//     setLoading(true)\n//     setError(null)\n\n//     try {\n//       // Build query string from search parameters\n//       const queryParams = new URLSearchParams()\n//       Object.entries(searchParams).forEach(([key, value]) => {\n//         if (value) queryParams.append(key, value)\n//       })\n\n//       const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`)\n\n//       if (!response.ok) {\n//         throw new Error(`Error: ${response.status}`)\n//       }\n\n//       const data = await response.json()\n//       setJobs(data)\n//     } catch (err) {\n//       setError(err.message)\n//       setJobs([])\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   return (\n//     <div className=\"app\">\n//       <Header />\n//       <main className=\"main-content\">\n//         <SearchForm onSearch={searchJobs} />\n//         {error && <div className=\"error-message\">Error: {error}</div>}\n//         {loading ? (\n//           <div className=\"loading\">\n//             <div className=\"spinner\"></div>\n//             <p>Searching for jobs...</p>\n//           </div>\n//         ) : (\n//           <JobList jobs={jobs} />\n//         )}\n//       </main>\n//       <Footer />\n//     </div>\n//   )\n// }\n\n// export default App\n\n\"use client\";\n\nvar _jsxFileName = \"C:\\\\gitProjects\\\\jobScrapper\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport SearchForm from \"./components/SearchForm\";\nimport JobList from \"./components/JobList\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { FaSearch } from \"react-icons/fa\"; // Importing search icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const searchJobs = async searchParams => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Build query string from search parameters\n      const queryParams = new URLSearchParams();\n      Object.entries(searchParams).forEach(([key, value]) => {\n        if (value) queryParams.append(key, value);\n      });\n      const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      setJobs(data);\n    } catch (err) {\n      setError(err.message);\n      setJobs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: !showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container\",\n        onClick: () => setShowForm(true),\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n          size: 50,\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to Search for Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n          onSearch: searchJobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Searching for jobs...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(JobList, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RejYjSpwMuJgGC3KrLULZ73dqvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","SearchForm","JobList","Header","Footer","FaSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","App","jobs","setJobs","loading","setLoading","error","setError","showForm","setShowForm","searchJobs","searchParams","queryParams","URLSearchParams","Object","entries","forEach","key","value","append","response","fetch","ok","Error","status","data","json","err","message","className","children","fileName","lineNumber","columnNumber","onClick","size","onSearch","_c","$RefreshReg$"],"sources":["C:/gitProjects/jobScrapper/frontend/src/App.js"],"sourcesContent":["// \"use client\"\r\n\r\n// import { useState } from \"react\"\r\n// import \"./App.css\"\r\n// import SearchForm from \"./components/SearchForm\"\r\n// import JobList from \"./components/JobList\"\r\n// import Header from \"./components/Header\"\r\n// import Footer from \"./components/Footer\"\r\n\r\n// function App() {\r\n//   const [jobs, setJobs] = useState([])\r\n//   const [loading, setLoading] = useState(false)\r\n//   const [error, setError] = useState(null)\r\n\r\n//   const searchJobs = async (searchParams) => {\r\n//     setLoading(true)\r\n//     setError(null)\r\n\r\n//     try {\r\n//       // Build query string from search parameters\r\n//       const queryParams = new URLSearchParams()\r\n//       Object.entries(searchParams).forEach(([key, value]) => {\r\n//         if (value) queryParams.append(key, value)\r\n//       })\r\n\r\n//       const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`)\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(`Error: ${response.status}`)\r\n//       }\r\n\r\n//       const data = await response.json()\r\n//       setJobs(data)\r\n//     } catch (err) {\r\n//       setError(err.message)\r\n//       setJobs([])\r\n//     } finally {\r\n//       setLoading(false)\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <Header />\r\n//       <main className=\"main-content\">\r\n//         <SearchForm onSearch={searchJobs} />\r\n//         {error && <div className=\"error-message\">Error: {error}</div>}\r\n//         {loading ? (\r\n//           <div className=\"loading\">\r\n//             <div className=\"spinner\"></div>\r\n//             <p>Searching for jobs...</p>\r\n//           </div>\r\n//         ) : (\r\n//           <JobList jobs={jobs} />\r\n//         )}\r\n//       </main>\r\n//       <Footer />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default App\r\n\r\n\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport \"./App.css\"\r\nimport SearchForm from \"./components/SearchForm\"\r\nimport JobList from \"./components/JobList\"\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\nimport { FaSearch } from \"react-icons/fa\" // Importing search icon\r\n\r\nfunction App() {\r\n  const [jobs, setJobs] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [showForm, setShowForm] = useState(false)\r\n\r\n  const searchJobs = async (searchParams) => {\r\n    setLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      // Build query string from search parameters\r\n      const queryParams = new URLSearchParams()\r\n      Object.entries(searchParams).forEach(([key, value]) => {\r\n        if (value) queryParams.append(key, value)\r\n      })\r\n\r\n      const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`)\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      setJobs(data)\r\n    } catch (err) {\r\n      setError(err.message)\r\n      setJobs([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        {!showForm ? (\r\n          <div className=\"icon-container\" onClick={() => setShowForm(true)}>\r\n            <FaSearch size={50} className=\"search-icon\" />\r\n            <p>Click to Search for Jobs</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <SearchForm onSearch={searchJobs} />\r\n            {error && <div className=\"error-message\">Error: {error}</div>}\r\n            {loading ? (\r\n              <div className=\"loading\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Searching for jobs...</p>\r\n              </div>\r\n            ) : (\r\n              <JobList jobs={jobs} />\r\n            )}\r\n          </>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}