{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\gitProjects\\\\jobScrapper\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport SearchForm from \"./components/SearchForm\";\nimport JobList from \"./components/JobList\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const searchJobs = async searchParams => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Build query string from search parameters\n      const queryParams = new URLSearchParams();\n      Object.entries(searchParams).forEach(([key, value]) => {\n        if (value) queryParams.append(key, value);\n      });\n      const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      setJobs(data);\n    } catch (err) {\n      setError(err.message);\n      setJobs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        onSearch: searchJobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching for jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(JobList, {\n        jobs: jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vSIinUUVYoBwpGTtlHOuWYOWot8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","SearchForm","JobList","Header","Footer","jsxDEV","_jsxDEV","App","jobs","setJobs","loading","setLoading","error","setError","searchJobs","searchParams","queryParams","URLSearchParams","Object","entries","forEach","key","value","append","response","fetch","ok","Error","status","data","json","err","message","className","children","fileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["C:/gitProjects/jobScrapper/frontend/src/App.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport \"./App.css\"\r\nimport SearchForm from \"./components/SearchForm\"\r\nimport JobList from \"./components/JobList\"\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\n\r\nfunction App() {\r\n  const [jobs, setJobs] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const searchJobs = async (searchParams) => {\r\n    setLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      // Build query string from search parameters\r\n      const queryParams = new URLSearchParams()\r\n      Object.entries(searchParams).forEach(([key, value]) => {\r\n        if (value) queryParams.append(key, value)\r\n      })\r\n\r\n      const response = await fetch(`http://localhost:5000/api/jobs?${queryParams}`)\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      setJobs(data)\r\n    } catch (err) {\r\n      setError(err.message)\r\n      setJobs([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        <SearchForm onSearch={searchJobs} />\r\n        {error && <div className=\"error-message\">Error: {error}</div>}\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Searching for jobs...</p>\r\n          </div>\r\n        ) : (\r\n          <JobList jobs={jobs} />\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}